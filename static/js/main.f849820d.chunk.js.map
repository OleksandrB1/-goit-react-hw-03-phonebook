{"version":3,"sources":["components/Form/Form.module.css","components/Contacts/Contacts.module.css","components/Form/Form.js","components/Filter/Filter.js","components/Contacts/Contacts.js","App.js","index.js","components/Filter/Filter.module.css"],"names":["module","exports","Form","state","name","number","change","event","target","value","setState","submit","preventDefault","props","onSubmit","reset","this","className","s","form","label","type","pattern","title","required","onChange","button","Component","Filter","input","Contacts","list","remove","map","id","listItem","item","onClick","App","contacts","filter","addContact","short","require","contact","generate","find","alert","removeContact","prevState","renderList","toLowerCase","includes","filterState","currentTarget","pars","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f849820d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__AJ2xi\",\"label\":\"Form_label__1A2L1\",\"button\":\"Form_button__3pi8E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"Contacts_listItem__3ZMz2\",\"item\":\"Contacts_item__gGne0\",\"button\":\"Contacts_button__19R6S\"};","import React, { Component } from \"react\";\nimport s from \"./Form.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  change = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  submit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <div>\n        <form className={s.form} onSubmit={this.submit}>\n          <label className={s.label}>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              value={name}\n              onChange={this.change}\n            />\n          </label>\n          <label className={s.label}>\n            Number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              value={number}\n              onChange={this.change}\n            />\n          </label>\n\n          <button className={s.button} type=\"submit\">\n            Add contacts\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default Form;\n","import PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, change }) => {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input className={s.input} type=\"text\" value={value} onChange={change} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  change: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import s from \"./Contacts.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Contacts = ({ list, remove }) => {\n  return (\n    <ul>\n      {list.map(({ id, name, number }) => (\n        <li key={id} className={s.listItem}>\n          <span className={s.item}>{name}:</span>\n          <span className={s.item}>{number}</span>\n          <button\n            onClick={() => {\n              remove(id);\n            }}\n            type=\"button\"\n            className={s.button}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContacts.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.shape).isRequired,\n  remove: PropTypes.func.isRequired,\n};\n\nexport default Contacts;\n","import React, { Component } from \"react\";\nimport Form from \"./components/Form/Form\";\nimport Filter from \"./components/Filter/Filter\";\nimport Contacts from \"./components/Contacts/Contacts\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n    name: \"\",\n    number: \"\",\n  };\n\n  componentDidMount() {\n    const pars = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (pars) {\n      this.setState({ contacts: pars });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n     const {contacts} = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const short = require(\"short-uuid\");\n    const contact = this.state.contacts;\n    const id = short.generate();\n    if (!contact.find((contacts) => contacts.name === name)) {\n      this.setState(({ contacts }) => ({\n        contacts: [{ id: id, name: name, number: number }, ...contacts],\n      }));\n    } else alert(`${name} is already in contacts.`);\n  };\n\n  removeContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  renderList = () => {\n    const { contacts, filter } = this.state;\n    return [...contacts].filter(({ name }) =>\n      name.toLowerCase().includes(filter)\n    );\n  };\n\n  filterState = (event) => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  render() {\n    const {\n      addContact,\n      filterState,\n      renderList,\n      removeContact,\n      state: { filter },\n    } = this;\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <Form onSubmit={addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} change={filterState} />\n        <Contacts list={renderList()} remove={removeContact} />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__769Hz\",\"input\":\"Filter_input__1XQle\"};"],"sourceRoot":""}